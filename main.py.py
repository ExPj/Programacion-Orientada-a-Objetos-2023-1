# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17bVYsLy94KZtXNg876X6Lu4grtH1DuZy
"""

import tkinter as tk
from tkinter import messagebox

class FriendApp:
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("LA APP")

        self.name_label = tk.Label(self.window, text="Nombre:")
        self.name_label.grid(row=0, column=0, sticky="W")
        self.name_entry = tk.Entry(self.window)
        self.name_entry.grid(row=0, column=1)

        self.number_label = tk.Label(self.window, text="Numero:")
        self.number_label.grid(row=1, column=0, sticky="W")
        self.number_entry = tk.Entry(self.window)
        self.number_entry.grid(row=1, column=1)

        self.create_button = tk.Button(self.window, text="Crear", command=self.create_friend)
        self.create_button.grid(row=2, column=0, padx=5, pady=10)

        self.friend_listbox = tk.Listbox(self.window)
        self.friend_listbox.grid(row=3, column=0, columnspan=2, padx=5, pady=5, sticky="NSEW")
        self.friend_listbox.bind("<<ListboxSelect>>", self.select_friend)

        self.update_button = tk.Button(self.window, text="Actualizar", command=self.update_friend, state=tk.DISABLED)
        self.update_button.grid(row=4, column=0, padx=5, pady=10)

        self.delete_button = tk.Button(self.window, text="Borrar", command=self.delete_friend, state=tk.DISABLED)
        self.delete_button.grid(row=4, column=1, padx=5, pady=10)

        self.load_friends()

    def load_friends(self):
        self.friend_listbox.delete(0, tk.END)
        with open("friendsContact.txt", "r") as file:
            for line in file:
                name, number = line.strip().split("!")
                self.friend_listbox.insert(tk.END, f"{name} - {number}")

    def create_friend(self):
        name = self.name_entry.get().strip()
        number = self.number_entry.get().strip()

        if name and number:
            with open("friendsContact.txt", "a") as file:
                file.write(f"{name}!{number}\n")
            self.load_friends()
            messagebox.showinfo("Amigo agregado.")
            self.name_entry.delete(0, tk.END)
            self.number_entry.delete(0, tk.END)
        else:
            messagebox.showerror("Escribe nombre y numero.")

    def select_friend(self, event):
        selection = event.widget.curselection()
        if selection:
            self.selected_friend = self.friend_listbox.get(selection[0])
            self.update_button.config(state=tk.NORMAL)
            self.delete_button.config(state=tk.NORMAL)

    def update_friend(self):
        if hasattr(self, "selected_friend"):
            selected_name, selected_number = self.selected_friend.split(" - ")

            new_name = self.name_entry.get().strip()
            new_number = self.number_entry.get().strip()

            if new_name and new_number:
                with open("friendsContact.txt", "r+") as file:
                    lines = file.readlines()
                    file.seek(0)

                    for line in lines:
                        name, number = line.strip().split("!")
                        if name == selected_name and number == selected_number:
                            file.write(f"{new_name}!{new_number}\n")
                        else:
                            file.write(line)
                    file.truncate()

                self.load_friends()
                messagebox.showinfo("Amigo actualizado.")
                self.name_entry.delete(0, tk.END)
                self.number_entry.delete(0, tk.END)
                self.update_button.config(state=tk.DISABLED)
                self.delete_button.config(state=tk.DISABLED)
                del self.selected_friend
            else:
                messagebox.showerror("Escribe nombre y numero.")
        else:
            messagebox.showerror("No se ha seleccionado a nadie.")

    def delete_friend(self):
        if hasattr(self, "selected_friend"):
            with open("friendsContact.txt", "r+") as file:
                lines = file.readlines()
                file.seek(0)

                for line in lines:
                    name, number = line.strip().split("!")
                    if f"{name} - {number}" != self.selected_friend:
                        file.write(line)
                file.truncate()

            self.load_friends()
            messagebox.showinfo("Amigo borrado.")
            self.name_entry.delete(0, tk.END)
            self.number_entry.delete(0, tk.END)
            self.update_button.config(state=tk.DISABLED)
            self.delete_button.config(state=tk.DISABLED)
            del self.selected_friend
        else:
            messagebox.showerror("No se ha seleccionado a nadie.")

    def run(self):
        self.window.mainloop()

if __name__ == "__main__":
    app = FriendApp()
    app.run()